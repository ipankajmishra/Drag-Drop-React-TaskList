{"ast":null,"code":"import _classCallCheck from \"/Users/panmishr3/Downloads/reactjs-drag-and-drop-forked/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/panmishr3/Downloads/reactjs-drag-and-drop-forked/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/Users/panmishr3/Downloads/reactjs-drag-and-drop-forked/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/Users/panmishr3/Downloads/reactjs-drag-and-drop-forked/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/Users/panmishr3/Downloads/reactjs-drag-and-drop-forked/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/inherits\";\nimport _assertThisInitialized from \"/Users/panmishr3/Downloads/reactjs-drag-and-drop-forked/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/assertThisInitialized\";\nimport _objectSpread from \"/Users/panmishr3/Downloads/reactjs-drag-and-drop-forked/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectSpread\";\nimport _slicedToArray from \"/Users/panmishr3/Downloads/reactjs-drag-and-drop-forked/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"/Users/panmishr3/Downloads/reactjs-drag-and-drop-forked/src/components/DnDBox.js\";\nimport React, { Component } from \"react\";\nimport { DragDropContext, Droppable, Draggable } from \"react-beautiful-dnd\"; // fake data generator\n// const getItems = count =>\n//   Array.from({ length: count }, (v, k) => k).map(k => ({\n//     id: `item-${k}`,\n//     content: `item ${k}`\n//   }));\n\nvar getItems = function getItems() {\n  return [{\n    id: 1,\n    content: \"PE Ratio\"\n  }, {\n    id: 2,\n    content: \"Revenue\"\n  }, {\n    id: 3,\n    content: \"COGS\"\n  }, {\n    id: 4,\n    content: \"Symbol\"\n  }, {\n    id: 5,\n    content: \"Market Cap\"\n  }];\n}; // a little function to help us with reordering the result\n\n\nvar reorder = function reorder(list, startIndex, endIndex) {\n  var result = Array.from(list);\n\n  var _result$splice = result.splice(startIndex, 1),\n      _result$splice2 = _slicedToArray(_result$splice, 1),\n      removed = _result$splice2[0];\n\n  result.splice(endIndex, 0, removed);\n  return result;\n};\n\nvar grid = 8;\n\nvar getItemStyle = function getItemStyle(isDragging, draggableStyle) {\n  return _objectSpread({\n    // some basic styles to make the items look a bit nicer\n    userSelect: \"none\",\n    boxSeizing: \"border-box\",\n    border: 0,\n    // padding: grid * 2,\n    // margin: `0 0 ${grid}px 0`,\n    paddingLeft: 5,\n    // height: 25,\n    // lineHeight: \"25px\",\n    // change background colour if dragging\n    background: isDragging ? \"#edf4fa\" : \"\"\n  }, draggableStyle);\n};\n\nvar getListStyle = function getListStyle(isDraggingOver) {\n  return {\n    background: isDraggingOver ? \"lightblue\" : \"lightgrey\",\n    padding: grid,\n    width: 250\n  };\n};\n\nvar App = /*#__PURE__*/function (_Component) {\n  _inherits(App, _Component);\n\n  function App(props) {\n    var _this;\n\n    _classCallCheck(this, App);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(App).call(this, props));\n    _this.state = {\n      items: getItems(10)\n    };\n    _this.onDragEnd = _this.onDragEnd.bind(_assertThisInitialized(_assertThisInitialized(_this)));\n    return _this;\n  }\n\n  _createClass(App, [{\n    key: \"onDragEnd\",\n    value: function onDragEnd(result) {\n      // dropped outside the list\n      if (!result.destination) {\n        return;\n      }\n\n      var items = reorder(this.state.items, result.source.index, result.destination.index);\n      this.setState({\n        items: items\n      });\n    } // Normally you would want to split things out into separate components.\n    // But in this example everything is just done in one place for simplicity\n\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this2 = this;\n\n      return /*#__PURE__*/React.createElement(DragDropContext, {\n        onDragEnd: this.onDragEnd,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 84,\n          columnNumber: 7\n        }\n      }, /*#__PURE__*/React.createElement(Droppable, {\n        droppableId: \"droppable\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 85,\n          columnNumber: 9\n        }\n      }, function (provided, snapshot) {\n        return /*#__PURE__*/React.createElement(\"div\", {\n          ref: provided.innerRef,\n          className: \"drag-and-drop-wrapper\" // style={getListStyle(snapshot.isDraggingOver)}\n          ,\n          __self: _this2,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 87,\n            columnNumber: 13\n          }\n        }, _this2.state.items.map(function (item, index) {\n          return /*#__PURE__*/React.createElement(Draggable, {\n            key: item.id,\n            draggableId: item.id,\n            index: index,\n            __self: _this2,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 93,\n              columnNumber: 17\n            }\n          }, function (provided, snapshot) {\n            return /*#__PURE__*/React.createElement(\"div\", Object.assign({\n              className: \"row\",\n              ref: provided.innerRef\n            }, provided.draggableProps, provided.dragHandleProps, {\n              style: getItemStyle(snapshot.isDragging, provided.draggableProps.style),\n              __self: _this2,\n              __source: {\n                fileName: _jsxFileName,\n                lineNumber: 95,\n                columnNumber: 21\n              }\n            }), item.content);\n          });\n        }), provided.placeholder);\n      }));\n    }\n  }]);\n\n  return App;\n}(Component); // Put the thing into the DOM!\n\n\nexport default App;","map":{"version":3,"sources":["/Users/panmishr3/Downloads/reactjs-drag-and-drop-forked/src/components/DnDBox.js"],"names":["React","Component","DragDropContext","Droppable","Draggable","getItems","id","content","reorder","list","startIndex","endIndex","result","Array","from","splice","removed","grid","getItemStyle","isDragging","draggableStyle","userSelect","boxSeizing","border","paddingLeft","background","getListStyle","isDraggingOver","padding","width","App","props","state","items","onDragEnd","bind","destination","source","index","setState","provided","snapshot","innerRef","map","item","draggableProps","dragHandleProps","style","placeholder"],"mappings":"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","sourcesContent":["import React, { Component } from \"react\";\nimport { DragDropContext, Droppable, Draggable } from \"react-beautiful-dnd\";\n\n// fake data generator\n// const getItems = count =>\n//   Array.from({ length: count }, (v, k) => k).map(k => ({\n//     id: `item-${k}`,\n//     content: `item ${k}`\n//   }));\n\nconst getItems = () => [\n  { id: 1, content: \"PE Ratio\" },\n  { id: 2, content: \"Revenue\" },\n  { id: 3, content: \"COGS\" },\n  { id: 4, content: \"Symbol\" },\n  { id: 5, content: \"Market Cap\" }\n];\n\n// a little function to help us with reordering the result\nconst reorder = (list, startIndex, endIndex) => {\n  const result = Array.from(list);\n  const [removed] = result.splice(startIndex, 1);\n  result.splice(endIndex, 0, removed);\n\n  return result;\n};\n\nconst grid = 8;\n\nconst getItemStyle = (isDragging, draggableStyle) => ({\n  // some basic styles to make the items look a bit nicer\n  userSelect: \"none\",\n  boxSeizing: \"border-box\",\n  border: 0,\n  // padding: grid * 2,\n  // margin: `0 0 ${grid}px 0`,\n  paddingLeft: 5,\n  // height: 25,\n  // lineHeight: \"25px\",\n\n  // change background colour if dragging\n  background: isDragging ? \"#edf4fa\" : \"\",\n\n  // styles we need to apply on draggables\n  ...draggableStyle\n});\n\nconst getListStyle = isDraggingOver => ({\n  background: isDraggingOver ? \"lightblue\" : \"lightgrey\",\n  padding: grid,\n  width: 250\n});\n\nclass App extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      items: getItems(10)\n    };\n    this.onDragEnd = this.onDragEnd.bind(this);\n  }\n\n  onDragEnd(result) {\n    // dropped outside the list\n    if (!result.destination) {\n      return;\n    }\n\n    const items = reorder(\n      this.state.items,\n      result.source.index,\n      result.destination.index\n    );\n\n    this.setState({\n      items\n    });\n  }\n\n  // Normally you would want to split things out into separate components.\n  // But in this example everything is just done in one place for simplicity\n  render() {\n    return (\n      <DragDropContext onDragEnd={this.onDragEnd}>\n        <Droppable droppableId=\"droppable\">\n          {(provided, snapshot) => (\n            <div\n              ref={provided.innerRef}\n              className={\"drag-and-drop-wrapper\"}\n              // style={getListStyle(snapshot.isDraggingOver)}\n            >\n              {this.state.items.map((item, index) => (\n                <Draggable key={item.id} draggableId={item.id} index={index}>\n                  {(provided, snapshot) => (\n                    <div\n                      className={\"row\"}\n                      ref={provided.innerRef}\n                      {...provided.draggableProps}\n                      {...provided.dragHandleProps}\n                      style={getItemStyle(\n                        snapshot.isDragging,\n                        provided.draggableProps.style\n                      )}\n                    >\n                      {item.content}\n                    </div>\n                  )}\n                </Draggable>\n              ))}\n              {provided.placeholder}\n            </div>\n          )}\n        </Droppable>\n      </DragDropContext>\n    );\n  }\n}\n\n// Put the thing into the DOM!\nexport default App;\n"]},"metadata":{},"sourceType":"module"}